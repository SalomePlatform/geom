# Copyright (C) 2013-2024  CEA, EDF, OPEN CASCADE
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

# - Config file for the @PROJECT_NAME@ package
# It defines the following variables. 
# Specific to the package @PROJECT_NAME@ itself:
#  @PROJECT_NAME_UC@_ROOT_DIR_EXP - the root path of the installation providing this CMake file
#

### Initialisation performed by CONFIGURE_PACKAGE_CONFIG_FILE:
@PACKAGE_INIT@

# Load the dependencies for the libraries of @PROJECT_NAME@ 
# (contains definitions for IMPORTED targets). This is only 
# imported if we are not built as a subproject (in this case targets are already there)
IF(NOT TARGET GEOMbasic AND NOT @PROJECT_NAME@_BINARY_DIR)
  INCLUDE("@PACKAGE_SALOME_INSTALL_CMAKE_LOCAL@/@PROJECT_NAME@Targets.cmake")
ENDIF()   

# Package root dir:
SET_AND_CHECK(GEOM_ROOT_DIR_EXP "@PACKAGE_CMAKE_INSTALL_PREFIX@")

# Include directories
SET_AND_CHECK(GEOM_INCLUDE_DIRS "${GEOM_ROOT_DIR_EXP}/@SALOME_INSTALL_HEADERS@")
SET(GEOM_INCLUDE_DIRS "${GEOM_INCLUDE_DIRS};@_SalomeGEOM_EXTRA_HEADERS@")
SET(GEOM_DEFINITIONS "@KERNEL_DEFINITIONS@")

# Package specific environment variables
@_SalomeGEOM_EXTRA_ENV_FULL@

#### Now the specificities

# Options exported by the package:
SET(SALOME_GEOM_BUILD_DOC    @SALOME_BUILD_DOC@)
SET(SALOME_GEOM_BUILD_TESTS  @SALOME_BUILD_TESTS@)

# Advanced options
SET(SALOME_GEOM_BUILD_GUI  @SALOME_BUILD_GUI@)
SET(SALOME_GEOM_USE_OPENCV @SALOME_GEOM_USE_OPENCV@)
SET(SALOME_GEOM_USE_VTK @SALOME_GEOM_USE_VTK@)

# Level 1 prerequisites:
SET_AND_CHECK(KERNEL_ROOT_DIR_EXP "@PACKAGE_KERNEL_ROOT_DIR@")
SET_AND_CHECK(OPENCASCADE_ROOT_DIR_EXP "@PACKAGE_OPENCASCADE_ROOT_DIR@")

# Optional level 1 prerequisites:
IF(SALOME_GEOM_BUILD_GUI)
  SET_AND_CHECK(GUI_ROOT_DIR_EXP "@PACKAGE_GUI_ROOT_DIR@")
  LIST(APPEND GEOM_DEFINITIONS   "@GUI_DEFINITIONS@")
ENDIF()
IF(SALOME_GEOM_USE_OPENCV)
  SET_AND_CHECK(OPENCV_ROOT_DIR_EXP "@PACKAGE_OPENCV_ROOT_DIR@")
  LIST(APPEND GEOM_DEFINITIONS "-DWITH_OPENCV")
ENDIF()
IF(SALOME_GEOM_USE_VTK)
  SET_AND_CHECK(VTK_ROOT_DIR_EXP "@PACKAGE_VTK_ROOT_DIR@")
  LIST(APPEND GEOM_DEFINITIONS "-DWITH_VTK")
ENDIF()

# For all prerequisites, load the corresponding targets if the package was used
# in CONFIG mode. This ensures dependent projects link correctly
# without having to set LD_LIBRARY_PATH:
SET(_PREREQ_@PROJECT_NAME@ @_PREREQ_LIST@)
SET(_PREREQ_@PROJECT_NAME@_CONFIG_DIR @_PREREQ_DIR_LIST@)
SET(_PREREQ_@PROJECT_NAME@_COMPONENTS "@_PREREQ_COMPO_LIST@")
LIST(LENGTH _PREREQ_@PROJECT_NAME@_CONFIG_DIR _list_len_@PROJECT_NAME@)
IF(NOT _list_len_@PROJECT_NAME@ EQUAL 0)
  # Another CMake stupidity - FOREACH(... RANGE r) generates r+1 numbers ...
  MATH(EXPR _range_@PROJECT_NAME@ "${_list_len_@PROJECT_NAME@}-1")
  FOREACH(_p_@PROJECT_NAME@ RANGE ${_range_@PROJECT_NAME@})
    LIST(GET _PREREQ_@PROJECT_NAME@            ${_p_@PROJECT_NAME@} _pkg_@PROJECT_NAME@    )
    LIST(GET _PREREQ_@PROJECT_NAME@_CONFIG_DIR ${_p_@PROJECT_NAME@} _pkg_dir_@PROJECT_NAME@)
    LIST(GET _PREREQ_@PROJECT_NAME@_COMPONENTS ${_p_@PROJECT_NAME@} _pkg_compo_@PROJECT_NAME@)
    IF(NOT OMIT_DETECT_PACKAGE_${_pkg_@PROJECT_NAME@})
      MESSAGE(STATUS "===> Reloading targets from ${_pkg_@PROJECT_NAME@} ...")
      IF(NOT _pkg_compo_@PROJECT_NAME@)
        FIND_PACKAGE(${_pkg_@PROJECT_NAME@} REQUIRED NO_MODULE
            PATHS "${_pkg_dir_@PROJECT_NAME@}"
            NO_DEFAULT_PATH)
      ELSE()
        STRING(REPLACE "," ";" _compo_lst_@PROJECT_NAME@ "${_pkg_compo_@PROJECT_NAME@}")
        MESSAGE(STATUS "===> (components: ${_pkg_compo_@PROJECT_NAME@})")
        FIND_PACKAGE(${_pkg_@PROJECT_NAME@} REQUIRED NO_MODULE
            COMPONENTS ${_compo_lst_@PROJECT_NAME@}
            PATHS "${_pkg_dir_@PROJECT_NAME@}"
            NO_DEFAULT_PATH)
      ENDIF()
    ENDIF()
  ENDFOREACH()
ENDIF()

# Installation directories
SET(SALOME_INSTALL_BINS "@SALOME_INSTALL_BINS@")
SET(SALOME_INSTALL_LIBS "@SALOME_INSTALL_LIBS@")
SET(SALOME_INSTALL_IDLS "@SALOME_INSTALL_IDLS@")
SET(SALOME_INSTALL_HEADERS "@SALOME_INSTALL_HEADERS@")
SET(SALOME_INSTALL_SCRIPT_SCRIPTS "@SALOME_INSTALL_SCRIPT_SCRIPTS@")
SET(SALOME_INSTALL_SCRIPT_DATA "@SALOME_INSTALL_SCRIPT_DATA@")
SET(SALOME_INSTALL_SCRIPT_PYTHON "@SALOME_INSTALL_SCRIPT_PYTHON@")
SET(SALOME_INSTALL_CMAKE "@SALOME_INSTALL_CMAKE@")
SET(SALOME_INSTALL_CMAKE_LOCAL "@SALOME_INSTALL_CMAKE_LOCAL@")
SET(SALOME_INSTALL_PYTHON "@SALOME_INSTALL_PYTHON@")
SET(SALOME_INSTALL_PYTHON_SHARED "@SALOME_INSTALL_PYTHON_SHARED@")
SET(SALOME_INSTALL_RES "@SALOME_INSTALL_RES@")
SET(SALOME_INSTALL_DOC "@SALOME_INSTALL_DOC@")
SET(SALOME_INSTALL_AMCONFIG_LOCAL "@SALOME_INSTALL_AMCONFIG_LOCAL@")

IF(SALOME_GEOM_BUILD_GUI) 
  # Include GUI targets if they were not already loaded:
  IF(NOT (TARGET Event)) 
    INCLUDE("${GUI_ROOT_DIR_EXP}/${SALOME_INSTALL_CMAKE_LOCAL}/SalomeGUITargets.cmake")
  ENDIF()
ELSE(SALOME_GEOM_BUILD_GUI) 
  # Include KERNEL targets if they were not already loaded:
  IF(NOT (TARGET SALOMEBasics) AND NOT SALOME_MED_STANDALONE) 
    INCLUDE("${KERNEL_ROOT_DIR_EXP}/${SALOME_INSTALL_CMAKE}/SalomeKERNELTargets.cmake")
  ENDIF()
ENDIF(SALOME_GEOM_BUILD_GUI)

# Exposed GEOM targets:
SET(GEOM_GEOMArchimede GEOMArchimede)
SET(GEOM_BlockFix BlockFix)
SET(GEOM_GEOMbasic GEOMbasic)
SET(GEOM_GEOMAlgo GEOMAlgo)
SET(GEOM_GEOMClient GEOMClient)
SET(GEOM_GEOMImpl GEOMImpl)
SET(GEOM_GEOMUtils GEOMUtils)
SET(GEOM_GEOMEngine GEOMEngine)
SET(GEOM_GEOM_SupervEngine GEOM_SupervEngine)
SET(GEOM_GEOMSketcher GEOMSketcher)
SET(GEOM_SalomeIDLGEOM SalomeIDLGEOM)
SET(GEOM_SalomeIDLGEOMSuperv SalomeIDLGEOMSuperv)
SET(GEOM_SalomeIDLAdvancedGEOM SalomeIDLAdvancedGEOM)
SET(GEOM_SalomeIDLSTLPlugin SalomeIDLSTLPlugin)
SET(GEOM_SalomeIDLBREPPlugin SalomeIDLBREPPlugin)
SET(GEOM_SalomeIDLSTEPPlugin SalomeIDLSTEPPlugin)
SET(GEOM_SalomeIDLIGESPlugin SalomeIDLIGESPlugin)
SET(GEOM_SalomeIDLXAOPlugin SalomeIDLXAOPlugin)
SET(GEOM_SalomeIDLVTKPlugin SalomeIDLVTKPlugin)
SET(GEOM_ShHealOper ShHealOper)
SET(GEOM_XAO XAO)
SET(GEOM_AdvancedEngine AdvancedEngine)
SET(GEOM_AdvancedGUI AdvancedGUI)
SET(GEOM_BasicGUI BasicGUI)
SET(GEOM_BlocksGUI BlocksGUI)
SET(GEOM_BooleanGUI BooleanGUI)
SET(GEOM_BuildGUI BuildGUI)
SET(GEOM_DisplayGUI DisplayGUI)
SET(GEOM_DlgRef DlgRef)
SET(GEOM_EntityGUI EntityGUI)
SET(GEOM_GEOMBase GEOMBase)
SET(GEOM_GEOMFiltersSelection GEOMFiltersSelection)
SET(GEOM_GEOM GEOM)
SET(GEOM_GEOMToolsGUI GEOMToolsGUI)
SET(GEOM_DependencyTree DependencyTree)
SET(GEOM_GenerationGUI GenerationGUI)
SET(GEOM_GroupGUI GroupGUI)
SET(GEOM_Material Material)
SET(GEOM_MeasureGUI MeasureGUI)
SET(GEOM_GEOMObject GEOMObject)
SET(GEOM_OCC2VTK OCC2VTK)
SET(GEOM_OperationGUI OperationGUI)
SET(GEOM_PrimitiveGUI PrimitiveGUI)
SET(GEOM_RepairGUI RepairGUI)
SET(GEOM_TransformationGUI TransformationGUI)
SET(GEOM_STLPluginGUI STLPluginGUI)
SET(GEOM_STLPluginEngine STLPluginEngine)
SET(GEOM_BREPPluginGUI BREPPluginGUI)
SET(GEOM_BREPPluginEngine BREPPluginEngine)
SET(GEOM_STEPPluginGUI STEPPluginGUI)
SET(GEOM_STEPPluginEngine STEPPluginEngine)
SET(GEOM_IGESPluginGUI IGESPluginGUI)
SET(GEOM_IGESPluginEngine IGESPluginEngine)
SET(GEOM_XAOPluginGUI XAOPluginGUI)
SET(GEOM_XAOPluginEngine XAOPluginEngine)
SET(GEOM_VTKPluginGUI VTKPluginGUI)
SET(GEOM_VTKPluginEngine VTKPluginEngine)
SET(GEOM_GEOMShapeRec GEOMShapeRec)
SET(GEOM_CurveCreator CurveCreator)
